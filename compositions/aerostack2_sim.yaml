
services:
  simassets:
    network_mode: "host"
    image: cyberphysics/aerostack2
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
      - "/tmp/.X11-unix:/tmp/.X11-unix"
      - ../applications/aerostack2/config:/workspace/config/
    environment:
      - "DISPLAY=${DISPLAY}"
      - XAUTHORITY
      - NVIDIA_DRIVER_CAPABILITIES=all
      - EGL_PLATFORM=surfaceless
    command: >
      ros2 launch as2_gazebo_assets launch_simulation.py use_sim_time:=true simulation_config_file:=config/world_gazebo.yaml
  simulator:
    network_mode: "host"
    image: cyberphysics/aerostack2
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
      - "/tmp/.X11-unix:/tmp/.X11-unix"
      - ../applications/aerostack2/config:/workspace/config/
    environment:
      - "DISPLAY=${DISPLAY}"
      - XAUTHORITY
      - NVIDIA_DRIVER_CAPABILITIES=all
      - EGL_PLATFORM=surfaceless
    command: >
      ros2 launch as2_platform_gazebo platform_gazebo_launch.py namespace:=drone_sim_0 platform_config_file:=config/config_gazebo.yaml simulation_config_file:=config/world_gazebo.yaml
  stateestimator:
    network_mode: "host"
    image: cyberphysics/aerostack2
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
      - ../applications/aerostack2/config:/workspace/config/
    command: >
      ros2 launch as2_state_estimator state_estimator_launch.py namespace:=drone_sim_0 config_file:=config/config_gazebo.yaml
  motioncontroller:
    network_mode: "host"
    image: cyberphysics/aerostack2
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
      - ../applications/aerostack2/config:/workspace/config/
    command: >
      ros2 launch as2_motion_controller controller_launch.py namespace:=drone_sim_0 config_file:=config/config_gazebo.yaml plugin_name:=pid_speed_controller plugin_config_file:=config/pid_speed_controller.yaml
  # Motion Behaviors
  motionbehaviors:
    network_mode: "host"
    image: cyberphysics/aerostack2
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
      - ../applications/aerostack2/config:/workspace/config/
    command: >
      ros2 launch as2_behaviors_motion motion_behaviors_launch.py namespace:=drone_sim_0 config_file:=config/config_gazebo.yaml
  # Trajectory Generation Behavior
  trajectorygeneration:
    network_mode: "host"
    image: cyberphysics/aerostack2
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
      - ../applications/aerostack2/config:/workspace/config/
    command: >
      ros2 launch as2_behaviors_trajectory_generation generate_polynomial_trajectory_behavior_launch.py namespace:=drone_sim_0 config_file:=config/config_gazebo.yaml
  # Point Gimbal Behavior
  gimbalbehavior:
    network_mode: "host"
    image: cyberphysics/aerostack2
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
      - ../applications/aerostack2/config:/workspace/config/
    command: >
      ros2 launch as2_behaviors_perception point_gimbal_behavior.launch.py namespace:=drone_sim_0 config_file:=config/config_gazebo.yaml
  keyboardteleoperation:
    network_mode: "host"
    image: cyberphysics/aerostack2
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
      - "/tmp/.X11-unix:/tmp/.X11-unix"
      - ../applications/aerostack2/config:/workspace/config/
    environment:
      - "DISPLAY=${DISPLAY}"
      - XAUTHORITY
      - NVIDIA_DRIVER_CAPABILITIES=all
      - EGL_PLATFORM=surfaceless
    command: >
      ros2 launch as2_keyboard_teleoperation as2_keyboard_teleoperation_launch.py namespace:=drone_sim_0
  # behaviortree:
  #   network_mode: "host"
  #   image: cyberphysics/aerostack2
  #   privileged: true
  #   devices:
  #     - /dev:/dev
  #   volumes:
  #     - /dev/shm:/dev/shm
  #     - ../applications/aerostack2/config:/workspace/config/
  #   command: >
  #     ros2 launch as2_behavior_tree behavior_trees.launch.py drone_id:=drone_sim_0 tree:=./trees/square.xml
