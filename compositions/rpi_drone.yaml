

# RViz
# On by default

# Launch aerostack2 simulated drone platform (gazebo needs to be running)
# CMD ["ros2", "launch", "as2_platform_gazebo", "platform_gazebo_launch.py", "namespace:=drone_sim_0", "simulation_config_file:=world_json_path"]

# Keyboard teleoperation:
# ros2 launch as2_keyboard_teleoperation as2_keyboard_teleoperation_launch.py namespace:=<%= drone_namespace %>

# Platform
# ros2 launch as2_platform_multirotor_simulator as2_platform_multirotor_simulator.launch.py namespace:=<%= drone_namespace %> config_file:=config/config.yaml uav_config:=config/uav_config.yaml world_config:=<%= simulation_config_file %>

# State Estimation:
# ros2 launch as2_state_estimator state_estimator_launch.py namespace:=<%= drone_namespace %> config_file:=config/config.yaml

# Motion Control:
# ros2 launch as2_motion_controller controller_launch.py namespace:=<%= drone_namespace %> config_file:=config/config.yaml plugin_name:=<%= motion_controller_plugin %> plugin_config_file:=config/<%= motion_controller_plugin %>.yaml

# Motion behaviors
# ros2 launch as2_behaviors_motion motion_behaviors_launch.py namespace:=<%= drone_namespace %> config_file:=config/config.yaml

# Trajectory Generation Behavior
# ros2 launch as2_behaviors_trajectory_generation generate_polynomial_trajectory_behavior_launch.py namespace:=<%= drone_namespace %> config_file:=config/config.yaml

# Point Gimbal Behavior
# ros2 launch as2_behaviors_perception point_gimbal_behavior.launch.py namespace:=<%= drone_namespace %> config_file:=config/config.yaml

# Behavior tree
# ros2 launch as2_behavior_tree behavior_trees.launch.py drone_id:=<%= drone_namespace %> tree:=./trees/square.xml

# Mission monitoring
# ros2 run as2_alphanumeric_viewer as2_alphanumeric_viewer_node --ros-args -r  __ns:=/<%= drone_namespace %>



services:
  ozzmaker: # Ozzmaker IMU, GPS pub
    network_mode: "host"
    image: cyberphysics/ozzmaker
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      /scripts/publisher.py
  oak: # Oak-1 ROS feature publisher
    network_mode: "host"
    image: cyberphysics/oak
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      /scripts/featuretracker.py
  pyflightcontroller: # FlightController subscribers
    network_mode: "host"
    image: cyberphysics/pyflightcontroller
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      python3 /flightcontroller/python/ros_flight_controller.py False
  vinsmono: # VINS-MONO, only calculate velocity, do I need the whole repo???
    network_mode: "host"
    image: cyberphysics/vinsmono
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      ros2 launch vins_estimator.launch.py
  rangefinder: # laser distance publisher
    network_mode: "host"
    image: cyberphysics/rangefinder
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      /scripts/main.py
  behaviortree: # Behavior Tree, obstacle avoidance
    network_mode: "host"
    image: cyberphysics/behaviortree
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      /scripts/main.py
  nicegui: # web interface
    network_mode: "host"
    image: cyberphysics/nicegui
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      /scripts/main.py

