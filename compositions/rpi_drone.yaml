
services:
  ozzmaker: # Ozzmaker IMU, GPS pub
    network_mode: "host"
    image: cyberphysics/ozzmaker
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      /scripts/publisher.py
  oak: # Oak-1 ROS feature publisher
    network_mode: "host"
    image: cyberphysics/oak1
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      /scripts/optical_flow_mono.py
  imufilter: # IMU Filter
    network_mode: "host"
    image: cyberphysics/rpiflightcontroller
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      python3 /scripts/scout/python/ozzmaker-LTE-IMU-filters.py
  rpiflightcontroller: # FlightController subscribers
    network_mode: "host"
    image: cyberphysics/rpiflightcontroller
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      python3 /scripts/scout/python/ros_flight_controller.py False
  rangefinder: # laser distance publisher
    network_mode: "host"
    image: cyberphysics/rangefinder
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      /scripts/main.py
  behaviortree: # Behavior Tree, obstacle avoidance
    network_mode: "host"
    image: cyberphysics/aerostack2
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      ros2 launch as2_behavior_tree behavior_trees.launch.py drone_id:=<%= drone_namespace %> tree:=./trees/square.xml
  nicegui: # web interface
    network_mode: "host"
    image: cyberphysics/nicegui
    privileged: true
    devices:
      - /dev:/dev
    volumes:
      - /dev/shm:/dev/shm
    command: >
      /scripts/main.py
  # vinsmono: # VINS-MONO, only calculate velocity
  #   network_mode: "host"
  #   image: cyberphysics/vinsmono
  #   privileged: true
  #   devices:
  #     - /dev:/dev
  #   volumes:
  #     - /dev/shm:/dev/shm
  #   command: >
  #     ros2 launch vins_estimator.launch.py

